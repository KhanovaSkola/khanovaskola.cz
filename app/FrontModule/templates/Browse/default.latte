{var $title = $selected->label}
{var $description = $selected->getDescription()}
{#scripts}
	{if $show_video_order}
		<script>
			onLoadQueue.push(function() {
				var prompt_shown = false;

				$(".videos-table ol").sortable({
					items: 'li',
					change: function() {
						var $that = $(this);
						$('.videos-header a').show();
						if (!prompt_shown) {
							prompt_shown = true;
							$('.videos-header').append($('<a href="#"/>').text(' [Ulo≈æit]').click(function() {
								var data = [];

								$.each($('.videos-table ol').sortable('toArray'), function(p, id) {
									$node = $("#" + id);
									data.push(($node.data('type') === 'video' ? 'v' : 'e') + ":" + $node.data('id'));
								});
								$.ajax({plink updatePositions!}, {
									data: { positions: data.join(',')}
								});
								$('.videos-header a').hide();
							}));
						}
					}
				}).disableSelection();
			});
		</script>
	{/if}
{/#}
{#content}

<article class="categories" itemscope="" itemtype="http://schema.org/{ifset $leaf}VideoGallery{else}CollectionPage{/ifset}">
	{define #list}
		<ul n:inner-foreach="$parent->getSubCategories() as $category">
			{if !$category->hasContent()}
				{?continue}
			{/if}
			<li n:class="$category->isEqualTo($selected) || $category->containsCategory($selected) ? selected">
				{if $category->isLeaf() && $entity = $category->getFirstContent()}
					{var $count_v = $category->getVideos()->count()}
					{var $count_ex = $category->getExercises()->count()}
					{if $entity instanceof \Entity\Video}
						<a n:href=":Front:Watch:, id => $category->id, vid => $entity->id">
					{else}
						<a n:href=":Front:Exercise:, id => $category->id, eid => $entity->id">
					{/if}
						{$category->label}
						<span class="content-count">
							{if $count_v}
								<i class="icon-video"></i><span style="margin-left: -3px">{$count_v}</span>
							{/if}
							{if $count_ex}
								<i class="icon-exercise"></i>{$count_ex}
							{/if}
						</span>
					</a>
				{else}
					<a n:href=":Front:Browse:, id => $category->id">{$category->label}</a>
				{/if}
			</li>
		</ul>&nbsp;
	{/define}
	{cache $selected->id, tags => ["category/$selected->id"]}
		<div class="tree">
			{if $selected->isSubject()}
				<ul>
					<li class="selected">
						<a n:href=":Front:Browse:, id => $selected->id">{$selected->label}</a>
					</li>
				</ul>
			{else}
				{var $parent => $selected->getParent()}
				{block #cats}
					{if !$parent->isSubject()}
						{include #cats, parent => $parent->getParent()}
					{else}
						<ul>
							<li class="selected">
								<a n:href=":Front:Browse:, id => $parent->id">{$parent->label}</a>
							</li>
						</ul>
					{/if}
					{include #list, parent => $parent}
				{/block}
			{/if}
			{include #list, parent => $selected}
		</div>
		<div class="entities">
			{if $selected->isLeaf()}
				{include ../_leaf.latte, category => $selected}
			{/if}
		</div>
	{/cache}
</article>
